{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","components/ConfirmDeleteCardPopup.js","utils/api.js","components/App.js","serviceWorker.js","index.js","images/logo__mesto.svg"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","isLiked","likes","some","i","cardDeleteButtonClassName","cardLikeButtonClassName","name","link","onClick","onCardClick","type","aria-label","onCardDelete","onCardLike","length","Main","avatar","onEditAvatar","onEditProfile","about","onAddPlace","cards","map","item","key","Footer","PopupWithForm","isOpen","onSubmit","method","action","id","noValidate","title","children","onClose","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","required","minLength","maxLength","defaultValue","onChange","target","value","EditAvatarPopup","userAvatar","useRef","onUpdateAvatar","current","ref","placeholder","AddPlacePopup","placeName","placeLink","ImagePopup","ConfirmDeleteCardPopup","api","options","this","_baseUrl","baseUrl","_headers","headers","fetch","then","res","ok","json","Promise","reject","status","catch","err","console","log","newInfo","body","JSON","stringify","cardInfo","cardId","data","authorization","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmDeleteCardPopupOpen","setConfirmDeleteCardPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","undefined","all","getInitialCards","getUserInfo","user","handleCloseByOverlayClickAndPressEscape","classList","contains","document","addEventListener","removeEventListener","Provider","changeLikeCardStatus","newCard","newCards","c","setUserInfo","newAvatar","setUserAvatar","addCard","deleteCard","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.5ba7bd9e.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../../src/images/logo__mesto.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img src={logo} alt=\"места России\" className=\"header__logo\" />\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();\n","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card(props) {\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  // проверяем являемся ли мы владельцем карточки\n  const isOwn = props.card.owner._id === currentUser._id;\n\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n\n  // переменная учтанавливает видимость кнопки \"удаления карточки\" в зависимости от владельца карточки\n  const cardDeleteButtonClassName = (\n    `element__delete-button ${isOwn ? '' : 'element__delete-button_hidden'}`\n  )\n\n  const cardLikeButtonClassName = `element__like-button ${isLiked ? 'element__like-button_active' : ''}`;\n\n  function handleClick() {\n    props.onCardClick(props.card);\n  }\n\nfunction handleLikeClick() {\n  props.onCardLike(props.card);\n}\n\nfunction handleDeleteClick() {\n  props.onCardDelete(props.card);\n}\n\n  return (\n    <li className=\"element\">\n      <img alt={props.card.name} className=\"element__image\" src={props.card.link} onClick={handleClick} />\n      <button type=\"button\" aria-label=\"delete\" className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\n      <div className=\"element__info\">\n        <h2 className=\"element__title\">{props.card.name}</h2>\n        <div className=\"element__like-area\">\n          <button type=\"button\" aria-label=\"like\" className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\n          <span className=\"element__like-count\">{props.card.likes.length}</span>\n        </div>\n      </div>\n    </li>\n  );\n\n\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main(props) {\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return (\n    <>\n      <section className=\"profile\">\n        <div className=\"profile__info\">\n          <img alt=\"аватар пользователя\" src={currentUser.avatar} className=\"profile__avatar\" onClick={props.onEditAvatar} />\n          <div className=\"profile__block\">\n            <div className=\"profile__name-area\">\n              <h1 className=\"profile__name\">{currentUser.name}</h1>\n              <button type=\"button\" aria-label=\"edit-profile\" className=\"profile__edit-button\" onClick={props.onEditProfile}></button>\n            </div>\n            <p className=\"profile__job\">{currentUser.about}</p>\n          </div>\n        </div>\n        <button type=\"button\" aria-label=\"add-card\" className=\"profile__card-add-button\" onClick={props.onAddPlace}></button>\n      </section>\n\n      <ul className=\"elements\">\n        {props.cards.map((item, i) => (\n          <Card\n            card={item}\n            key={i}\n            onCardClick={props.onCardClick}\n            onCardLike={props.onCardLike}\n            onCardDelete={props.onCardDelete}\n          />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction PopupWithForm(props) {\n  return (\n    <section className={`popup ${props.isOpen ? 'popup_opened' : ''} popup-${props.name}`}>\n      <form name={props.name} onSubmit={props.onSubmit} method=\"post\" action=\"#\" className=\"popup__container\" id={props.name} noValidate>\n        <h3 className=\"popup__title\">{props.title}</h3>\n        {props.children}\n        <button type=\"submit\" className=\"popup__submit-button\">Сохранить</button>\n        <button type=\"button\" aria-label=\"close\" className=\"popup__close-button\" onClick={props.onClose}></button>\n      </form>\n    </section>\n  );\n}\n\nexport default PopupWithForm;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\n\nfunction EditProfilePopup(props) {\n\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    props.onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  return (\n    <PopupWithForm\n      name='profile'\n      title='Редактировать профиль'\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}>\n\n      <input\n        type=\"text\"\n        name=\"name\"\n        required\n        minLength=\"2\"\n        maxLength=\"40\"\n        className=\"popup__input\"\n        id=\"inputName\"\n        defaultValue={name}\n        onChange={handleNameChange}\n      />\n      <span className=\"popup__input_type_error\" id=\"inputName-error\"></span>\n      <input\n        type=\"text\"\n        name=\"about\"\n        required\n        minLength=\"2\"\n        maxLength=\"200\"\n        className=\"popup__input\"\n        id=\"inputJob\"\n        defaultValue={description}\n        onChange={handleDescriptionChange}\n      />\n      <span className=\"popup__input_type_error\" id=\"inputJob-error\"></span>\n    </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup(props) {\n  const userAvatar = React.useRef();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    props.onUpdateAvatar({\n      avatar: userAvatar.current.value\n    });\n    userAvatar.current.value = '';\n  }\n\n  return (\n    <PopupWithForm\n      name='avatar'\n      title='Обновить аватар'\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n    >\n      <input\n        type=\"url\"\n        name=\"avatar\"\n        ref={userAvatar}\n        placeholder=\"Ссылка на картинку\"\n        required className=\"popup__input\"\n        id=\"linkAvatar\"\n      />\n      <span className=\"popup__input_type_error\" id=\"linkAvatar-error\"></span>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup(props) {\n\n  const placeName = React.useRef();\n  const placeLink = React.useRef();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    props.onAddPlace({\n      name: placeName.current.value,\n      link: placeLink.current.value\n    });\n    placeName.current.value = '';\n    placeLink.current.value = '';\n  }\n\n  return (\n    <PopupWithForm\n      name='add-card'\n      title='Новое место'\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n    >\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Название\"\n        ref={placeName}\n        defaultValue=\"\"\n        required\n        minLength=\"1\"\n        maxLength=\"30\"\n        className=\"popup__input\"\n        id=\"cardName\"\n      />\n      <span className=\"popup__input_type_error\" id=\"cardName-error\"></span>\n      <input\n        type=\"url\"\n        name=\"link\"\n        ref={placeLink}\n        placeholder=\"Ссылка на картинку\"\n        defaultValue=\"\"\n        required\n        className=\"popup__input\"\n        id=\"linkPhoto\"\n      />\n      <span className=\"popup__input_type_error\" id=\"linkPhoto-error\"></span>\n    </PopupWithForm>\n  )\n}\n\nexport default AddPlacePopup;\n","import React from 'react';\n\nfunction ImagePopup(props) {\n  return (\n    <figure className={`popup popup_big-image ${props.card && 'popup_opened'}`}>\n      <div className=\"popup__image-box\">\n        <img alt={props.card ? props.card.name : ''} className=\"popup__image\" src={props.card ? props.card.link : ''} />\n        <figcaption className=\"popup__image-caption\">{props.card ? props.card.name : ''}</figcaption>\n        <button type=\"button\" aria-label=\"close\" className=\"popup__close-button\" onClick={props.onClose}></button>\n      </div>\n    </figure>\n  );\n}\n\nexport default ImagePopup;\n","import React from 'react';\n\nfunction ConfirmDeleteCardPopup(props) {\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onCardDelete(props.isOpen);\n  }\n\n  return (\n    <section className={`popup popup-delete-card ${props.isOpen ? 'popup_opened' : ''}`} onSubmit={handleSubmit}>\n      <form name=\"delete-card\" method=\"post\" action=\"#\" className=\"popup__container\" id=\"deleteCardForm\" noValidate>\n        <h3 className=\"popup__title\">Вы уверены?</h3>\n        <button type=\"submit\" className=\"popup__submit-button\">Да</button>\n        <button type=\"button\" aria-label=\"close\" className=\"popup__close-button\" onClick={props.onClose}></button>\n      </form>\n    </section>\n  );\n}\n\nexport default ConfirmDeleteCardPopup;\n","\nclass Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  //метод получет данные пользователя с сервера\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    })\n\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // метод отправляет новые данные пользователя на сервер\n  setUserInfo(newInfo) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: newInfo.name,\n        about: newInfo.about\n      })\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // метод для получения массива карточек с сервера\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    })\n\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // метод добавления карточки\n  addCard(cardInfo) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: cardInfo.name,\n        link: cardInfo.link\n      })\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: isLiked ? 'PUT' : 'DELETE',\n      headers: this._headers,\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // метод смены аватара\n  setUserAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // метод удаления карточки\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n}\n\n// создаем класс для работы с Api\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-13',\n  headers: {\n    authorization: 'b8b572e2-0aa8-4f92-a0e1-a67154852e96',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default api;\n","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport ConfirmDeleteCardPopup from './ConfirmDeleteCardPopup';\nimport api from '../utils/api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isConfirmDeleteCardPopupOpen, setConfirmDeleteCardPopupOpen] = React.useState();\n  const [selectedCard, setSelectedCard] = React.useState();\n  const [currentUser, setCurrentUser] = React.useState([]);\n  const [cards, setCards] = React.useState([]);\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleConfirmDeleteCardClick(card) {\n    setConfirmDeleteCardPopupOpen(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(undefined);\n    setConfirmDeleteCardPopupOpen('');\n  }\n\n  // обработчик обновления данных пользователя\n  function handleUpdateUser(newInfo) {\n    api.setUserInfo(newInfo)\n      .then((res) => {\n        setCurrentUser(res)\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    closeAllPopups();\n  }\n\n  // обработчик обновления аватара\n  function handleUpdateAvatar(newAvatar) {\n    api.setUserAvatar(newAvatar)\n      .then((res) => {\n        setCurrentUser(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    closeAllPopups();\n  }\n\n  // обработчик постановки/снятия лайка карточек\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        // Обновляем стейт\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // обработчик удаления карточки\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n      .then(() => {\n        const newCards = cards.filter((c) => c._id !== card._id);\n        setCards(newCards)\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    closeAllPopups();\n  }\n\n  // обработчик добавления новой карточки\n  function handleAddPlaceSubmit(newCard) {\n    api.addCard(newCard)\n      .then((newCard) => {\n        setCards([...cards, newCard])\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    closeAllPopups();\n  }\n\n  // эффект для получения массива карточек и данных пользователя с сервера\n  React.useEffect(() => {\n    Promise.all([api.getInitialCards(), api.getUserInfo()])\n      .then(([data, user]) => {\n        setCards(data);\n        setCurrentUser(user)\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  // эффект для закрытия попапов кликом на оверлей или по нажатию клавиши \"ESC\"\n  React.useEffect(() => {\n    function handleCloseByOverlayClickAndPressEscape(e) {\n      if (e.key === 'Escape' || e.target.classList.contains('popup_opened')) {\n        closeAllPopups();\n      }\n    }\n\n    document.addEventListener('click', handleCloseByOverlayClickAndPressEscape);\n    document.addEventListener('keydown', handleCloseByOverlayClickAndPressEscape);\n\n    return () => {\n      document.removeEventListener('click', handleCloseByOverlayClickAndPressEscape);\n      document.removeEventListener('keydown', handleCloseByOverlayClickAndPressEscape);\n    }\n  })\n\n  return (\n    <div className=\"root\">\n      <CurrentUserContext.Provider value={currentUser}>\n\n        <Header />\n\n        <Main\n          onEditProfile={handleEditProfileClick}\n          onEditAvatar={handleEditAvatarClick}\n          onAddPlace={handleAddPlaceClick}\n          onCardClick={handleCardClick}\n          onCardLike={handleCardLike}\n          onCardDelete={handleConfirmDeleteCardClick}\n          cards={cards}\n        />\n\n        <Footer />\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n\n        <ConfirmDeleteCardPopup\n          isOpen={isConfirmDeleteCardPopupOpen}\n          onClose={closeAllPopups}\n          onCardDelete={handleCardDelete}\n        />\n\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo__mesto.4e5bdbab.svg\";"],"sourceRoot":""}